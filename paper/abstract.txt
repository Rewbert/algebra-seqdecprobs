Sequential decision problems (SDPs), usually described using the Bellman equation and solved by backward induction, is a classical topic in decision theory. At the core of each SDP is a state space and a control space and we model these using types and type families in Agda. There is a well-developed algebra of sum types, product types, etc. and we show a way of extending that to decision problems. We build up a library of combinators for building more complicated SDPs from simpler components and in the process we explore the properties of the resulting algebra of sequential decision problems with the aim to understand and explain the design space.
