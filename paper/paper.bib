@string{CUP = {Cambridge University Press}}
@string{JFPabbr = {J. Funct. Program.}}
@string{JFPlong = {Journal of Functional Programming}}
@inproceedings{ionescujansson2013DTPinSciComp,
  author =       {Cezar Ionescu and Patrik Jansson},
  booktitle =    {24th Symposium on Implementation and Application of
                  Functional Languages (IFL 2012)},
  editor =       {Ralf Hinze},
  pages =        {140--156},
  publisher =    {Springer},
  series =       {LNCS},
  title =        {Dependently-typed programming in scientific
                  computing: Examples from economic modelling},
  volume =       8241,
  year =         2013,
  doi =          {10.1007/978-3-642-41582-1_9},
}

@inproceedings{ionescujansson:LIPIcs:2013:3899,
  address =      {Dagstuhl, Germany},
  author =       {Cezar Ionescu and Patrik Jansson},
  booktitle =    {Proc. TYPES 2011},
  pages =        {41--54},
  COMMENTpublisher =    {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  series =       {Leibniz Int. Proc. in Informatics (LIPIcs)},
  title =        {Testing versus proving in climate impact research},
  volume =       19,
  year =         2013,
  doi =          {10.4230/LIPIcs.TYPES.2011.41},
}

@Article{botta_jansson_ionescu_2017_avoidability,
  author =       {Nicola Botta and Patrik Jansson and Cezar Ionescu},
  title =        {Contributions to a computational theory of policy
                  advice and avoidability},
  journal =      {Journal of Functional Programming},
  issn =         {0956-7968},
  publisher =    {Cambridge University Press},
  volume =       27,
  pages =        {1--52},
  year =         2017,
  DOI =          {10.1017/S0956796817000156},
  COMMENTnote =  {Accepted for publication 2017-09-20. Published
                  online 2017-10-24.},
  abstract =     {We present the starting elements of a mathematical
                  theory of policy advice and avoidability. More
                  specifically, we formalize a cluster of notions
                  related to policy advice, such as policy, viability,
                  reachability, and propose a novel approach for
                  assisting decision making, based on the concept of
                  avoidability. We formalize avoidability as a
                  relation between current and future states,
                  investigate under which conditions this relation is
                  decidable and propose a generic procedure for
                  assessing avoidability. The formalization is
                  constructive and makes extensive use of the
                  correspondence between dependent types and logical
                  propositions, decidable judgments are obtained
                  through computations. Thus, we aim for a
                  computational theory, and emphasize the role that
                  computer science can play in global system science.}
}

@Article{esd-2017-86,
  author =	 {Botta, N. and Jansson, P. and Ionescu, C.},
  title =	 {The impact of uncertainty on optimal emission
                  policies},
  journal =	 {Earth System Dynamics},
  volume =	 9,
  year =	 2018,
  number =	 2,
  pages =	 {525--542},
  commentURL =	 {https://www.earth-syst-dynam.net/9/525/2018/},
  doi =		 {10.5194/esd-9-525-2018},
  otherkey =	 {esd-9-525-2018, botta2018impact}
}

@article{DBLP:journals/corr/BottaJICB16,
  author    = {Nicola Botta and
               Patrik Jansson and
               Cezar Ionescu and
               David R. Christiansen and
               Edwin Brady},
  title     = {Sequential decision problems, dependent types and generic solutions},
  journal   = {Logical Methods in Computer Science},
  volume    = {13},
  number    = {1},
  year      = {2017},
  COMMENTurl       = {https://doi.org/10.23638/LMCS-13(1:7)2017},
  doi       = {10.23638/LMCS-13(1:7)2017},
  timestamp = {Wed, 03 May 2017 14:47:56 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/BottaJICB16},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@phdthesis{norell_practical_2007,
  author =       {Ulf Norell},
  school =       {Chalmers Tekniska HÃ¶gskola},
  type =         {{PhD} Thesis},
  title =        {Towards a practical programming language based on
                  dependent type theory},
  year =         2007,
  abstract =     {Dependent type theories have a long history of being
                  used for theorem proving. One aspect of type theory
                  which makes it very powerful as a proof language is
                  that it mixes deduction with computation. This also
                  makes type theory a good candidate for
                  programming---the strength of the type system allows
                  properties of programs to be stated and established,
                  and the computational properties provide semantics
                  for the programs. This thesis is concerned with
                  bridging the gap between the theoretical
                  presentations of type theory and the requirements on
                  a practical programming language. Although there are
                  many challenging research problems left to solve
                  before we have an industrial scale programming
                  language based on type theory, this thesis takes us
                  a good step along the way.},
}

@phdthesis{ionescu2009vulnerability,
  author =	 {Ionescu, Cezar},
  school =	 {Freie Universit{\"a}t Berlin},
  title =	 {Vulnerability modelling and monadic dynamical
                  systems},
  year =	 2009,
}

@article{brady2013idris,
  title =	 {Idris, a general-purpose dependently typed
                  programming language: Design and implementation},
  author =	 {Brady, Edwin},
  journal =	 {Journal of Functional Programming},
  volume =	 23,
  number =	 05,
  pages =	 {552--593},
  year =	 2013,
  doi =		 {10.1017/S095679681300018X},
  publisher =	 {Cambridge University Press}
}

@book{bellman1957,
  author =       "Bellman, Richard",
  title =        "Dynamic Programming",
  publisher =    "Princeton University Press",
  year =         "1957"
}